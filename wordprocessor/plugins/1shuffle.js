// Generated by CoffeeScript 1.4.0
(function() {
  var events, processword,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  events = require("events").EventEmitter;

  processword = (function(_super) {

    __extends(processword, _super);

    function processword() {}

    processword.prototype.process = function(words, argv) {
      var tmpwords;
      tmpwords = words;
      if (argv["argv"]["shuffle-words"]) {
        Array.prototype.shuffle = function() {
				for (var j, x, i = this.length; i; j = parseInt(Math.random() * i), x = this[--i], this[i] = this[j], this[j] = x);
				return this;
			};;

        tmpwords.shuffle();
        console.log(tmpwords);
        this.processed = true;
        return this.emit("end", tmpwords);
      } else {
        this.processed = false;
        return this.emit("end", void 0);
      }
    };

    processword.prototype.processed = function() {
      return this.processed;
    };

    return processword;

  })(events);

  exports.processword = processword;

}).call(this);
