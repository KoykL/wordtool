// Generated by CoffeeScript 1.4.0
(function() {
  var events, processword,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  events = require("events").EventEmitter;

  processword = (function(_super) {

    __extends(processword, _super);

    function processword() {}

    processword.prototype.process = function(words, options) {
      var each, existed, tmpholder, _i, _len;
      existed = void 0;
      tmpholder = void 0;
      if (options["argv"]["avoid-redundancy"]) {
        existed = new Object();
        tmpholder = new Array();
        for (_i = 0, _len = words.length; _i < _len; _i++) {
          each = words[_i];
          if (!existed[each["name"]]) {
            existed[each["name"]] = true;
            tmpholder.push(each);
          }
        }
      }
      return this.emit("end", tmpholder);
    };

    processword.prototype.processed = function() {
      return this.processed;
    };

    return processword;

  })(events);

  exports.processword = processword;

}).call(this);
